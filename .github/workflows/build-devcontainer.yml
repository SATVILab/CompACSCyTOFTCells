name: Update prebuild devcontainer

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  update-devcontainer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build and push devcontainer image
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/${{ github.repository }}
          cacheFrom: ghcr.io/${{ github.repository }}
          push: always

      - name: Update or create prebuild/devcontainer.json
        run: |
          # Define the paths
          DEVCONTAINER_JSON=".devcontainer/devcontainer.json"
          PREBUILD_JSON=".devcontainer/prebuild/devcontainer.json"

          # Determine the image name
          IMAGE_NAME="ghcr.io/${{ github.repository }}"

          # Create the prebuild directory if it doesn't exist
          mkdir -p "$(dirname "$PREBUILD_JSON")"

          # If prebuild/devcontainer.json exists, update the image line
          if [ -f "$PREBUILD_JSON" ]; then
            jq --arg image "$IMAGE_NAME" '.image = $image' "$PREBUILD_JSON" > temp.json && mv temp.json "$PREBUILD_JSON"
          else
            # If prebuild/devcontainer.json doesn't exist, copy customizations and set the image
            if [ -f "$DEVCONTAINER_JSON" ]; then
              jq --arg image "$IMAGE_NAME" \
                '.image = $image | .customizations = .customizations' \
                "$DEVCONTAINER_JSON" > "$PREBUILD_JSON"
            else
              echo "No devcontainer.json found to copy customizations from!"
              exit 1
            fi
          fi

      - name: Commit and push changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .devcontainer/prebuild/devcontainer.json
          git commit -m "Update prebuild devcontainer.json with the latest image"
          git push
